Things to remember:
    - Every time we log on to instance: cd $AWS_FPGA_REPO_DIR && source vitis_setup.sh && cd
    - 164.4/max = performance in GFLOPs
    - Make sure make estimate doesn't take longer than 12 hours (or even 20 minutes ideally)
    - Keep applying optimization until your kernel occupies about 80% of these resources (make resource)

Things to try:
    - Specify #pragma HLS inline off inside the function body to reduce synthesis time
    - Need to implement pipeline and unrolls
        - For pipeline, create pipelined functions
    - LOOP TRANSFORMATIONS
    - Sliding window
    - Reduction

Look at:
- WARNING: [HLS 200-914] Completely partitioning array 'input_window.V' (/home/centos/CS133/lab5/cnn-krnl.cpp:57) accessed through non-constant indices on dimension 1 (/home/centos/CS133/lab5/cnn-krnl.cpp:15:9), which may result in long runtime and suboptimal QoR due to large multiplexers. Please consider wrapping the array access into a function or using a register file core instead.

- INFO: [SCHED 204-61] Pipelining loop 'set_bias_h'.
WARNING: [HLS 200-885] Unable to schedule 'store' operation ('C_V_addr_2_write_ln205') of constant 0 on array 'C_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'C_V'.
Resolution: For help on HLS 200-885 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-885.html
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 28, Depth = 28.

- INFO: [SCHED 204-61] Pipelining loop 'relu_h'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('C_V_load_165') on array 'C_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'C_V'.
Resolution: For help on HLS 200-885 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-885.html
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 56, Depth = 56.

- INFO: [SCHED 204-61] Pipelining loop 'maxpool_h'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('C_V_load_3', /home/centos/CS133/lab5/cnn-krnl.cpp:154) on array 'C_V' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'C_V'.
Resolution: For help on HLS 200-885 see www.xilinx.com/html_docs/xilinx2020_1/hls-guidance/200-885.html
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 56, Depth = 58.ls

Optimizations:
    - Reduction
        - Done in a tree structure with ReduceOdd (reduces elements 1 to 24; skips 0), then Reduce
    - Sliding window
        - InitWindow pipelined function
    - Pipeline conv_h, pipeline bias, relu, maxpool_h
    - Change h tile size to 112
    - Partition bias, weight, input, input_window, C_reduce
        - input_window and C_reduce are registers

Optimization notes (check synthesis text for more possible):
    - Pipelining conv_h auto partitions C on dim=2
        - Doesn't like pipelining conv_j, (conv_h too big to unroll)
    - Check II's of loops in synthesis.txt